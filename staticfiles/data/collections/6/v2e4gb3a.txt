The architectures of software systems are becoming more complex, large, and dynamic. The design of these architectures allows architects to master building complex software systems. But, their informal description, may give rise to ambiguity, their understanding becomes more and more difficult and leads to the incorrect implementation of these software systems. There are many solutions allowing software architecture design. In this paper, we use software design patterns as a solution. This is due to their reusable software elements. Our principal objective is to propose other alternatives to the informal visual description of software architectures. In past work, we have studied Service Oriented Architectures. We used SOA design patterns with standard formal notations. This work is a continuation to the past one. We apply our approach on design patterns for the Internet of Things. We introduce a refinement-based approach for modeling IoT design patterns. It takes advantage of graphical modeling and formal method. It is organized around two main axes. The first axis is to provide modeling solutions in conformance with the UML standard language. The second axis covers the general specification of design pattern models with the Event-B method. As a result, we propose a design support tool for IoT architectures based on IoT design patterns. It allows modeling of correct-by-design software systems.