Splicing systems are generative mechanisms introduced by Tom Head in 1987 to model the biological process of DNA recombination. The computational engine of a splicing system is the “splicing operation”, a cut-and-paste binary string operation defined by a set of “splicing rules”, quadruples [Formula: see text] where [Formula: see text] are words over an alphabet [Formula: see text]. For two strings [Formula: see text] and [Formula: see text], applying the splicing rule r produces the string [Formula: see text]. In this paper we focus on a particular type of splicing systems, called (i, j) semi-simple splicing systems, [Formula: see text] and [Formula: see text], wherein all splicing rules r have the property that the two strings in positions i and j in r are singleton letters, while the other two strings are empty. The language generated by such a system consists of the set of words that are obtained starting from an initial set called “axiom set”, by iteratively applying the splicing rules to strings in the axiom set as well as to intermediately produced strings. We consider semi-simple splicing systems where the axiom set is a regular language, and investigate the descriptional complexity of such systems in terms of the size of the minimal deterministic finite automata that recognize the languages they generate.