Poor adherence to medication is a global phenomenon that has received a significant amount of research attention yet remains largely unsolved. Medication non-adherence can blur drug efficacy results in clinical trials, lead to substantial financial losses, increase the risk of relapse and hospitalisation, or lead to death. The most common methods measuring adherence are post-treatment measures; that is, adherence is usually measured after the treatment has begun. What the authors are proposing in this multidisciplinary study is a technique for analysing the factors that can cause non-adherence before or during medication treatment. Fault Tree Analysis (FTA), allows system analysts to determine how combinations of simple faults of a system can propagate to cause a total system failure. Monte Carlo simulation is a mathematical algorithm that depends heavily on repeated random sampling to predict the behaviour of a system. In this study, the authors propose the use of Non-Adherence Tree Analysis (NATA), based on the FTA and Monte Carlo simulation techniques, to improve adherence. Firstly, the non-adherence factors of a medication treatment lifecycle are translated into what is referred to as a Non-Adherence Tree (NAT). Secondly, the NAT is coded into a format that is translated into the GoldSim software for performing dynamic system modelling and analysis using Monte Carlo. Finally, the GoldSim model is simulated and analysed to predict the behaviour of the NAT. This study produces a framework for improving adherence by analysing social and non-social adherence barriers. The results reveal that the biggest factor that could contribute to non-adherence to a COVID-19 treatment is a therapy-related factor (the side effects of the medication). This is closely followed by a condition-related factor (asymptomatic nature of the disease) then patient-related factors (forgetfulness and other causes). With this information, clinicians can implement relevant measures and allocate resources appropriately to minimise non-adherence.