An involutory function, also called involution, is a function [Formula: see text] that is its own inverse, i.e., [Formula: see text] holds whenever [Formula: see text] is defined. This paper presents a computational model of involution as a variant of Turing machines, called an involutory Turing machine. The computational model is shown to be complete in the sense that not only does an involutory Turing machine always compute an involution but also every involutory computable function can be computed by an involutory Turing machine. As any involution is injective (hence reversible), any involutory Turing machine forms a standard reversible Turing machine that is backward deterministic. Furthermore, the existence of a universal involutory Turing machine is shown under an appropriate redefinition of universality given by Axelsen and Gl√ºck for reversible Turing machines. This work is motivated by characterizing bidirectional transformation languages.